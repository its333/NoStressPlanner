name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nostressplanner
        ports:
          - 5432:5432
          - 6543:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:6543/nostressplanner
      DIRECT_URL: postgresql://postgres:postgres@localhost:5432/nostressplanner
      NEXTAUTH_SECRET: test-secret
      DISCORD_CLIENT_ID: test-client-id
      DISCORD_CLIENT_SECRET: test-client-secret
      PUSHER_APP_ID: test
      PUSHER_KEY: test
      PUSHER_SECRET: test
      PUSHER_CLUSTER: eu
      NEXT_PUBLIC_PUSHER_KEY: test
      NEXT_PUBLIC_PUSHER_CLUSTER: eu
      CRON_SECRET: test-cron
      PLAYWRIGHT_BASE_URL: http://127.0.0.1:3100
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Prisma generate
        run: pnpm prisma:generate

      - name: Run migrations
        run: pnpm prisma migrate deploy

      - name: Typecheck
        run: pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Unit tests
        run: pnpm test:unit

      - name: Install Playwright dependencies
        run: pnpm exec playwright install --with-deps chromium

      - name: E2E tests
        run: pnpm test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
